version: '3'

includes:
  onboard:
    taskfile: ./Taskfile_onboard_users.yml
  ssh:
    taskfile: ./Taskfile_ssh.yml


tasks:
  init:
    status:
      - test -f secrets.auto.tfvars
      - test -f gitlab.auto.tfvars
    cmds: 
      - terraform -chdir=./.init init
      - terraform -chdir=./.init apply -auto-approve
      - rm -f ./.init/terraform.tfstate
      - rm -f ./.init/terraform.tfstate.backup
      - rm -f ./.init/.terraform.lock.hcl
      - rm -rf ./.init/.terraform

  init-terraform-backend:
    run: always
    cmds:
      - echo "Initiating AWS S3 Terraform Backend"
      - terraform  init
      - terraform apply -auto-approve -target=module.backend_terraform 

  deploy-foundation:
    dotenv: ['secrets.auto.tfvars']
    run: always
    desc: Deploys the whole organization's resources
    preconditions:
      - test -f s3_backend.tf
    cmds:
      - export $(grep -v '^#' secrets.auto.tfvars | sed 's/ *= */=/g' | sed 's/"//g')
      - |
        terraform init \
        -backend-config="access_key=$aws_access_key" \
        -backend-config="secret_key=$aws_secret_key"
      - terraform apply -auto-approve -target=module.foundation

  destroy-foundation:
    dotenv: ['secrets.auto.tfvars']
    run: always
    preconditions:
      - test -f s3_backend.tf
    desc: |
      Destroys the Gitlab instances. It will not delete the images. 
    cmds:
      - export $(grep -v '^#' secrets.auto.tfvars | sed 's/ *= */=/g' | sed 's/"//g')
      - terraform destroy -auto-approve -target=module.foundation

  deploy-gitlab:
    dotenv: ['secrets.auto.tfvars']
    run: always
    preconditions:
      - test -f s3_backend.tf
    cmds:
      - terraform apply -auto-approve -target=module.gitlab

  destroy-gitlab:
    dotenv: ['secrets.auto.tfvars']
    run: always
    preconditions:
      - test -f s3_backend.tf
    cmds:
      - terraform destroy -auto-approve -target=module.gitlab 

  deploy-gitlab-runners:
    dotenv: ['secrets.auto.tfvars']
    run: always
    preconditions:
      - test -f s3_backend.tf
    cmds:
      - terraform apply -auto-approve -target=module.gitlab_runners 

  apply-gitlab-settings:
    dotenv: ['secrets.auto.tfvars']
    run: always
    preconditions:
      - test -f s3_backend.tf
    desc: Applies Gitlab settings, such as enforcing two factor authentication
    cmds:
      - terraform apply -auto-approve -target=module.gitlab_settings 

  apply-iam:
    dotenv: ['.env']
    run: always
    desc: Deploys the whole organization's resources
    preconditions:
      - test -f s3_backend.tf
    cmds:
      - export $(grep -v '^#' secrets.auto.tfvars | sed 's/ *= */=/g' | sed 's/"//g')
      - terraform apply -auto-approve -target=module.iam 
